# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the master branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project and GKE_SA_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke

name: K8S Deployment Files - Update All k8s Deployments Files to GKE

on:
  push:
    branches:
      - master
    paths:
      - 'infra/k8s/**'

      
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: multi-cluster    # TODO: update to cluster name
  GKE_ZONE: europe-central2-a   # TODO: update to cluster zone
  
jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2


    # Setup gcloud CLI
    - name: Set up Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    
    # Set compute /zone gcloud kubectl
    - name: Set glcoud compute/zone
      run: |-
        gcloud config set compute/zone ${{ env.GKE_ZONE }}

    # Get gcloud credentials
    - name: Set glcoud credentials
      run: |-
        gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }}

    # Deploy the Docker image to the GKE cluster
    - name: Update Deployments on Google Cloud
      run: |-
        kubectl apply -f infra/k8s/
        kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} client=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE }}:${{ steps.vars.outputs.sha_short }}
